name: CI

on:
  push:
    branches:
      - main
      - master
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  sanity:
    runs-on: ubuntu-latest
    env:
      PYTHON_VERSION: '3.11'
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: ./tools/run.sh deps
      - name: Run ansible-test sanity
        run: ./tools/run.sh sanity
      - name: Build collection artifact
        run: ./tools/run.sh build
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: collection-dist
          path: dist/*.tar.gz
          if-no-files-found: ignore
  integration:
    needs: sanity
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        release:
          - 23.7.R1
          - 23.10.R2
    timeout-minutes: 45
    env:
      PYTHON_VERSION: '3.11'
      SROS_CONTAINER_IMAGE: ghcr.io/nokia/sros-container:${{ matrix.release }}
      SROS_SSH_PORT: '2222'
      SROS_NETCONF_PORT: '2830'
      SROS_CONTAINER_EXTRA_ARGS: '--privileged'
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: ./tools/run.sh deps
      - name: Prepare SR OS license
        if: ${{ secrets.SROS_CONTAINER_LICENSE_B64 != '' }}
        run: |
          mkdir -p .licenses
          echo "${SROS_CONTAINER_LICENSE_B64}" | base64 -d > .licenses/sros.lic
          echo "SROS_LICENSE_FILE=$(pwd)/.licenses/sros.lic" >> $GITHUB_ENV
        env:
          SROS_CONTAINER_LICENSE_B64: ${{ secrets.SROS_CONTAINER_LICENSE_B64 }}
      - name: Log in to container registry
        if: ${{ secrets.SROS_REGISTRY && secrets.SROS_REGISTRY_USERNAME && secrets.SROS_REGISTRY_PASSWORD }}
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.SROS_REGISTRY }}
          username: ${{ secrets.SROS_REGISTRY_USERNAME }}
          password: ${{ secrets.SROS_REGISTRY_PASSWORD }}
      - name: Run integration tests
        env:
          SROS_USERNAME: ${{ secrets.SROS_USERNAME || 'admin' }}
          SROS_PASSWORD: ${{ secrets.SROS_PASSWORD || 'admin' }}
          SROS_LICENSE_FILE: ${{ env.SROS_LICENSE_FILE }}
        run: ./tools/run.sh integration --targets device_info
